{"version":3,"file":"static/js/183.c04f3edd.chunk.js","mappings":"qIAEA,IAFuB,8F,0MCEjBA,EAAW,gCACXC,EAAU,mCAEVC,EAAU,mCAAG,WAAOC,GAAP,uFACQC,IAAAA,IAAUD,GADlB,cACTE,EADS,yBAERA,GAFQ,2CAAH,sDAKHC,EAAgB,WACzB,OAAOJ,EAAW,GAAD,OAAIF,EAAJ,sCAA0CC,KAGlDM,EAAgB,SAACC,GAC1B,OAAON,EAAW,GAAD,OAAIF,EAAJ,gCAAoCC,EAApC,iCAAoEO,EAApE,uCAIRC,EAAkB,SAACC,GAC5B,OAAOR,EAAW,GAAD,OAAIF,EAAJ,iBAAqBU,EAArB,oBAAwCT,EAAxC,qBAGRU,EAAW,SAACD,GACrB,OAAOR,EAAW,GAAD,OAAIF,EAAJ,iBAAqBU,EAArB,4BAAgDT,EAAhD,qBAGRW,EAAa,SAACF,GACvB,OAAOR,EAAW,GAAD,OAAIF,EAAJ,iBAAqBU,EAArB,4BAAgDT,EAAhD,sB,iIC3BrB,EAA6B,yBAA7B,EAAkE,wBAAlE,EAAkG,oBAAlG,EAAoI,0BAApI,EAAqK,mBAArK,EAA+L,mB,SC6D/L,EAtDa,WACX,OAAwBY,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAKC,EAAAA,EAAAA,MAAYC,QACvB,GAAkCL,EAAAA,EAAAA,WAAS,GAA3C,eAAOM,EAAP,KAAkBC,EAAlB,KACA,GAAoCP,EAAAA,EAAAA,UAAS,IAA7C,eAAOQ,EAAP,KAAmBC,EAAnB,MAEAC,EAAAA,EAAAA,YAAU,WACHP,IAILL,EAAAA,EAAAA,IAASK,GACNQ,MAAK,SAAAnB,GAAQ,OAAIU,EAAQV,EAASoB,KAAKX,SACvCY,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,CAACX,IAEJ,IAKMc,EAAc,WAClBV,GAAcD,IAGhB,OACE,2BACGA,IAAa,SAACY,EAAA,EAAD,CAAOC,MAAOX,EAAYY,WAAYH,KACpD,eAAII,UAAWC,EAAf,SACGrB,EAAKsB,KAAI,YAA4C,IAAzCpB,EAAwC,EAAxCA,GAAIqB,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACnC,OACE,gBAAaL,UAAWC,EAAxB,WACE,gBACED,UAAWC,EACXK,IACEF,EAAY,yCAC0BA,GAClCG,EAAAA,EAENC,IAAK1B,EACL2B,QAAS,kBAvBrBrB,EAuBwCgB,QAtBxCR,QAwBU,iBAAKI,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAA6BE,KAC7B,eAAGH,UAAWC,EAAd,wBAAuCI,UAblCvB,a,6ECtCrB,GAAgB,QAAU,uBAAuB,MAAQ,qBAAqB,IAAM,oB,SCI9E4B,EAAYC,SAASC,cAAc,gBA0CzC,EAxCc,SAAC,GAA2B,IAAzBd,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YACtBV,EAAAA,EAAAA,YAAU,WAGR,OAFAwB,OAAOC,iBAAiB,UAAWC,GAE5B,WACLF,OAAOG,oBAAoB,UAAWD,OAI1C,IAAMA,EAAiB,SAAAE,GACN,WAAXA,EAAEC,MACJnB,KAUJ,OAAOoB,EAAAA,EAAAA,eACL,gBAAKnB,UAAWC,EAAAA,QAAgBQ,QAPd,SAAAQ,GACdA,EAAEG,gBAAkBH,EAAEI,QACxBtB,KAKF,UACE,gBAAKC,UAAWC,EAAAA,MAAhB,UACE,gBACED,UAAWC,EAAAA,MACXK,IAAG,yCAAoCR,GACvCU,IAAK,eAIXE","sources":["api/defaultPucture.js","api/movieSearcher.js","webpack://react-homework-template/./src/components/cast/Cast.module.css?6cbd","components/cast/Cast.jsx","webpack://react-homework-template/./src/components/modal/Modal.module.css?5a53","components/modal/Modal.jsx"],"sourcesContent":["const defaultPicture = \"https://upload.wikimedia.org/wikipedia/commons/4/44/Question_mark_%28black_on_white%29.png\";\n\nexport default defaultPicture;","import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"067f291d21ed1c6d30bd9ade17d843cc\";\n\nconst fetchFilms = async (url) => {\n    const response = await axios.get(url);\n    return response;\n};\n\nexport const trendingFilms = () => {\n    return fetchFilms(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n};\n\nexport const searchedFilms = (value) => {\n    return fetchFilms(`${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${value}\n    &page=1&include_adult=false`)\n};\n\nexport const filmDescription = (id_film) => {\n    return fetchFilms(`${BASE_URL}movie/${id_film}?api_key=${API_KEY}&language=en-US`)\n};\n\nexport const filmCast = (id_film) => {\n    return fetchFilms(`${BASE_URL}movie/${id_film}/credits?api_key=${API_KEY}&language=en-US`)\n};\n\nexport const filmReview = (id_film) => {\n    return fetchFilms(`${BASE_URL}movie/${id_film}/reviews?api_key=${API_KEY}&language=en-US`)\n};","// extracted by mini-css-extract-plugin\nexport default {\"cast__list\":\"Cast_cast__list__b6Dap\",\"character\":\"Cast_character__hi56N\",\"image\":\"Cast_image__beiRj\",\"description\":\"Cast_description__zuI9H\",\"name\":\"Cast_name__dC+34\",\"role\":\"Cast_role__5Jkl1\"};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { filmCast } from 'api/movieSearcher';\nimport defaultPicture from 'api/defaultPucture';\nimport Modal from 'components/modal/Modal';\nimport styles from './Cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const id = useParams().movieId;\n  const [modalShow, setModalShow] = useState(false);\n  const [modalValue, setModalValue] = useState('');\n\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n\n    filmCast(id)\n      .then(response => setCast(response.data.cast))\n      .catch(error => console.log(error));\n  }, [id]);\n\n  const modalHandler = img => {\n    setModalValue(img);\n    modalSwitch();\n  };\n\n  const modalSwitch = () => {\n    setModalShow(!modalShow);\n  };\n\n  return (\n    <div>\n      {modalShow && <Modal image={modalValue} switchFunc={modalSwitch} />}\n      <ul className={styles.cast__list}>\n        {cast.map(({ id, name, profile_path, character }) => {\n          return (\n            <li key={id} className={styles.character}>\n              <img\n                className={styles.image}\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : defaultPicture\n                }\n                alt={id}\n                onClick={() => modalHandler(profile_path)}\n              />\n              <div className={styles.description}>\n                <h3 className={styles.name}>{name}</h3>\n                <p className={styles.role}>Character: {character}</p>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Modal_overlay__baCSF\",\"modal\":\"Modal_modal__EqaZW\",\"img\":\"Modal_img__US4DJ\"};","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styles from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal__root');\n\nconst Modal = ({ image, switchFunc }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyboard);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyboard);\n    };\n  });\n\n  const handleKeyboard = e => {\n    if (e.code === 'Escape') {\n      switchFunc();\n    }\n  };\n\n  const handleClick = e => {\n    if (e.currentTarget === e.target) {\n      switchFunc();\n    }\n  };\n\n  return createPortal(\n    <div className={styles.overlay} onClick={handleClick}>\n      <div className={styles.modal}>\n        <img\n          className={styles.image}\n          src={`https://image.tmdb.org/t/p/w500${image}`}\n          alt={'poster'}\n        />\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  image: PropTypes.string.isRequired,\n  switchFunc: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n"],"names":["BASE_URL","API_KEY","fetchFilms","url","axios","response","trendingFilms","searchedFilms","value","filmDescription","id_film","filmCast","filmReview","useState","cast","setCast","id","useParams","movieId","modalShow","setModalShow","modalValue","setModalValue","useEffect","then","data","catch","error","console","log","modalSwitch","Modal","image","switchFunc","className","styles","map","name","profile_path","character","src","defaultPicture","alt","onClick","modalRoot","document","querySelector","window","addEventListener","handleKeyboard","removeEventListener","e","code","createPortal","currentTarget","target"],"sourceRoot":""}