{"version":3,"file":"static/js/183.1893ae1a.chunk.js","mappings":"qIAEA,IAFuB,8F,0MCEjBA,EAAW,gCACXC,EAAU,mCAEVC,EAAU,mCAAG,WAAOC,GAAP,uFACQC,IAAAA,IAAUD,GADlB,cACTE,EADS,yBAERA,GAFQ,2CAAH,sDAKHC,EAAgB,WACzB,OAAOJ,EAAW,GAAD,OAAIF,EAAJ,sCAA0CC,KAGlDM,EAAgB,SAACC,GAC1B,OAAON,EAAW,GAAD,OAAIF,EAAJ,gCAAoCC,EAApC,iCAAoEO,EAApE,uCAIRC,EAAkB,SAACC,GAC5B,OAAOR,EAAW,GAAD,OAAIF,EAAJ,iBAAqBU,EAArB,oBAAwCT,EAAxC,qBAGRU,EAAW,SAACD,GACrB,OAAOR,EAAW,GAAD,OAAIF,EAAJ,iBAAqBU,EAArB,4BAAgDT,EAAhD,qBAGRW,EAAa,SAACF,GACvB,OAAOR,EAAW,GAAD,OAAIF,EAAJ,iBAAqBU,EAArB,4BAAgDT,EAAhD,sB,uHC3BrB,EAA6B,yBAA7B,EAAkE,wBAAlE,EAAkG,oBAAlG,EAAoI,0BAApI,EAAqK,mBAArK,EAA+L,mB,SCuC/L,EA/Ba,WACT,OAAwBY,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAKC,EAAAA,EAAAA,MAAYC,QAWvB,OATAC,EAAAA,EAAAA,YAAU,WACDH,IAILL,EAAAA,EAAAA,IAASK,GAAII,MAAK,SAAAf,GAAQ,OAAIU,EAAQV,EAASgB,KAAKP,SAAOQ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QACvF,CAACP,KAIA,0BACI,eAAIU,UAAWC,EAAf,SACKb,EAAKc,KAAI,YAA4C,IAAzCZ,EAAwC,EAAxCA,GAAIa,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACjC,OAAO,gBAAaL,UAAWC,EAAxB,WACH,gBAAKD,UAAWC,EAAcK,IAAKF,EAAY,yCAAqCA,GAC9EG,EAAAA,EAAgBC,IAAKlB,KAC3B,iBAAKU,UAAWC,EAAhB,WACI,eAAID,UAAWC,EAAf,SAA6BE,KAC7B,eAAGH,UAAWC,EAAd,wBAAuCI,UAL/Bf","sources":["api/defaultPucture.js","api/movieSearcher.js","webpack://react-homework-template/./src/components/cast/Cast.module.css?6cbd","components/cast/Cast.jsx"],"sourcesContent":["const defaultPicture = \"https://upload.wikimedia.org/wikipedia/commons/4/44/Question_mark_%28black_on_white%29.png\";\n\nexport default defaultPicture;","import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"067f291d21ed1c6d30bd9ade17d843cc\";\n\nconst fetchFilms = async (url) => {\n    const response = await axios.get(url);\n    return response;\n};\n\nexport const trendingFilms = () => {\n    return fetchFilms(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n};\n\nexport const searchedFilms = (value) => {\n    return fetchFilms(`${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${value}\n    &page=1&include_adult=false`)\n};\n\nexport const filmDescription = (id_film) => {\n    return fetchFilms(`${BASE_URL}movie/${id_film}?api_key=${API_KEY}&language=en-US`)\n};\n\nexport const filmCast = (id_film) => {\n    return fetchFilms(`${BASE_URL}movie/${id_film}/credits?api_key=${API_KEY}&language=en-US`)\n};\n\nexport const filmReview = (id_film) => {\n    return fetchFilms(`${BASE_URL}movie/${id_film}/reviews?api_key=${API_KEY}&language=en-US`)\n};","// extracted by mini-css-extract-plugin\nexport default {\"cast__list\":\"Cast_cast__list__b6Dap\",\"character\":\"Cast_character__hi56N\",\"image\":\"Cast_image__beiRj\",\"description\":\"Cast_description__zuI9H\",\"name\":\"Cast_name__dC+34\",\"role\":\"Cast_role__5Jkl1\"};","import React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\n\nimport { filmCast } from 'api/movieSearcher';\nimport defaultPicture from 'api/defaultPucture';\nimport styles from \"./Cast.module.css\";\n\n\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const id = useParams().movieId;\n\n    useEffect(() => {\n        if (!id) {\n            return\n        };\n\n        filmCast(id).then(response => setCast(response.data.cast)).catch(error => console.log(error));\n    }, [id]);\n\n\n    return (\n        <div>\n            <ul className={styles.cast__list}>\n                {cast.map(({ id, name, profile_path, character }) => {\n                    return <li key={id} className={styles.character}>\n                        <img className={styles.image} src={profile_path ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                            : defaultPicture} alt={id} />\n                        <div className={styles.description}>\n                            <h3 className={styles.name}>{name}</h3>\n                            <p className={styles.role}>Character: {character}</p>\n                        </div>\n                    </li>\n                })}\n            </ul>\n        </div>\n    )\n};\n\nexport default Cast;"],"names":["BASE_URL","API_KEY","fetchFilms","url","axios","response","trendingFilms","searchedFilms","value","filmDescription","id_film","filmCast","filmReview","useState","cast","setCast","id","useParams","movieId","useEffect","then","data","catch","error","console","log","className","styles","map","name","profile_path","character","src","defaultPicture","alt"],"sourceRoot":""}